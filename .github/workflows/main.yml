name: Generate
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  schedule:
    - cron: '0 12 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Setup environment
        run: pip install -r requirements.txt
      - name: Run pytest
        run: pytest

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Setup environment
        run: pip install -r requirements.txt
      - name: Set up Go
        uses: actions/setup-go@v5
      - name: Pull v2fly community domain list
        uses: actions/checkout@v4
        with:
          repository: 'v2fly/domain-list-community'
          path: 'domain-list-community'
      - name: Pull Loyalsoldier's geosite tool
        uses: actions/checkout@v4
        with:
          repository: 'Loyalsoldier/domain-list-custom'
          path: 'tool_geosite'
      - name: Install Loyalsoldier's geoip tool
        run: go install -v github.com/Loyalsoldier/geoip@latest
      - name: Generate rules
        run: python generate.py
      - name: Download MaxMind GeoLite2 Country DB
        env:
          MAXMIND_KEY: ${{ secrets.MAXMIND_KEY }}
        run: |
              wget -O ./GeoLite2-Country.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=${MAXMIND_KEY}&suffix=tar.gz"
              tar xzvf ./GeoLite2-Country.tar.gz
              cp ./GeoLite2-Country_*/GeoLite2-Country.mmdb ./
      - name: Generate Geosite DB
        run: |
              cd tool_geosite
              go run ./ --datapath=../dists/geosite --outputpath=../dists --exportlists="" --togfwlist=""
      - name: Generate GeoIP DB
        run: |
              cat <<EOF > config.json
              {
                "input": [
                  {
                    "type": "private",
                    "action": "add"
                  },
                  {
                    "type": "maxmindMMDB",
                    "action": "add",
                    "args": {
                      "uri": "./GeoLite2-Country.mmdb"
                    }
                  },
                  {
                    "type": "cutter",
                    "action": "remove",
                    "args": {
                      "wantedList": ["cn"]
                    }
                  },
                  {
                    "type": "text",
                    "action": "add",
                    "args": {
                      "name": "cn",
                      "uri": "./dists/text/domestic_ip.txt",
                      "onlyIPType": "ipv4"
                    }
                  },
                  {
                    "type": "text",
                    "action": "add",
                    "args": {
                      "name": "cn",
                      "uri": "./dists/text/domestic_ip6.txt",
                      "onlyIPType": "ipv6"
                    }
                  }
                ],
                "output": [
                  {
                    "type": "v2rayGeoIPDat",
                    "action": "output",
                    "args": {
                      "outputName": "geoip.dat",
                      "outputDir": "./dists"
                    }
                  },
                  {
                    "type": "maxmindMMDB",
                    "action": "output",
                    "args": {
                      "outputName": "geoip.mmdb",
                      "outputDir": "./dists",
                      "overwriteList": [
                        "cn",
                        "private"
                      ]
                    }
                  }
                ]
              }
              EOF
              geoip -c config.json
      - name: Remove tmp files
        run: |
              rm -rf dists/geosite
              rm dists/gfwlist.txt
      - name: Generate home page
        run: python generate_homepage.py
      - name: Publish to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: 2e54d1245681bc04eaa33ed5d68bdfa7
          command: pages deploy dists --project-name=xkww3n-rules
